<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2016Fall CPB 課程網誌 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/course.atom.xml" rel="self"></link><id>./</id><updated>2016-12-19T14:00:00+08:00</updated><entry><title>W14心得</title><link href="./w14xin-de.html" rel="alternate"></link><published>2016-12-19T14:00:00+08:00</published><updated>2016-12-19T14:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2016-12-19:./w14xin-de.html</id><summary type="html">&lt;p&gt;建立leo
&lt;/p&gt;
&lt;p&gt;@settings(設定字元)&lt;/p&gt;
&lt;p&gt;@Path 資料夾 宣告地下的檔案位址&lt;/p&gt;
&lt;p&gt;@edit 資料.md   (編輯資料)(屬於子節點)&lt;/p&gt;
&lt;p&gt;@edit local_publishconf.py (設定檔) 引用到下方設定檔 &lt;/p&gt;
&lt;p&gt;@edit pelicanconf.py (設定檔) &lt;/p&gt;
&lt;p&gt;@button pelican-blog (轉檔) 內有路徑 #os.system("pelican content -o blog -s local_publishconf.py") 將content內md檔轉抄文件，存於blog，設定檔local_publishconf.py&lt;/p&gt;
&lt;p&gt;@button https server(建立近端http伺服器，近端檢視遠端https下網誌的狀況)按鈕需有2key&lt;/p&gt;
&lt;p&gt;複製localhost.crt至資料夾中 &lt;/p&gt;
&lt;p&gt;複製localhost.key至資料夾中 &lt;/p&gt;
&lt;p&gt;建立blog資料夾 &lt;/p&gt;
&lt;p&gt;複製 轉檔需有plugin與theme的資料夾&lt;/p&gt;
&lt;p&gt;@button https server內的 server_address = ('localhost', XXXX) XXXX為近端server網址https://localhost:XXXX&lt;/p&gt;
&lt;p&gt;快捷鍵 &lt;/p&gt;
&lt;p&gt;ctrl+u 上移 &lt;/p&gt;
&lt;p&gt;ctrl+d 下移 &lt;/p&gt;
&lt;p&gt;ctrl+r 右移 &lt;/p&gt;
&lt;p&gt;ctrl+l 左移 &lt;/p&gt;
&lt;p&gt;ctrl+i 新增&lt;/p&gt;
&lt;p&gt;ctrl+r 成為子節點&lt;/p&gt;
&lt;p&gt;leo內容: &lt;/p&gt;
&lt;p&gt;規定格式 摘要 內容 &lt;/p&gt;
&lt;p&gt;導入Brython 標準程式庫 &lt;/p&gt;
&lt;p&gt;啟動Brython &lt;/p&gt;
&lt;p&gt;寫Python&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W14練習</title><link href="./w14lian-xi.html" rel="alternate"></link><published>2016-12-12T14:00:00+08:00</published><updated>2016-12-12T14:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2016-12-12:./w14lian-xi.html</id><summary type="html">&lt;p&gt;以下為 http://mde.tw/2016fallcp/course/Python3Programs.txt 中的 ch01 綜合範例, 其餘範例位於本 Leo Editor 專案檔中的 "Python3 程式範例" 節點, 請各組一一將範例程式碼與執行結果, 放入各學員的課程網誌中

&lt;a href="http://mde.tw/2016fallcp/course/Python3Programs"&gt;連結&lt;/a&gt;&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W11 Brython 繪圖範例1</title><link href="./w11-brython-hui-tu-fan-li-1.html" rel="alternate"></link><published>2016-11-22T12:00:00+08:00</published><updated>2016-11-22T12:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2016-11-22:./w11-brython-hui-tu-fan-li-1.html</id><summary type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫指法 --&gt;

&lt;canvas id="japanflag3" width="600" height="500"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")

canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖
def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = " rgb(128, 74, 0)"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = " rgb(128, 74, 0)"
        ctx.stroke()
        ctx.closePath()
    ctx.closePath()

background(10, 55, 20, 30, 5, 4, ctx)
background(130, 55, 20, 30, 5, 4, ctx)
background(250, 55, 20, 30, 5, 4, ctx)
background(10, 235, 20, 30, 5, 4, ctx)
background(130, 235, 20, 30, 5, 4, ctx)
background(250, 235, 20, 30, 5, 4, ctx)

def xx(x,y,ctx):
    ctx.beginPath()
    ctx.moveTo(x, y)
    ctx.lineTo(x+10, y+10)
    ctx.moveTo(x+10, y)
    ctx.lineTo(x, y+10)
    ctx.lineWidth =3
    ctx.strokeStyle = "black"
    ctx.stroke()
    ctx.closePath()

def oo(x,y,ctx):
    ctx.beginPath()
    ctx.arc(x, y, 7, 0, 2*math.pi, False)
    ctx.lineWidth =3
    ctx.strokeStyle = "black"
    ctx.stroke()
    ctx.closePath()

#A major
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "20px Arial"
ctx.fillText("A major", 10, 30)
#A major圓1
ctx.beginPath()
ctx.arc(50, 100, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#A major圓2
ctx.beginPath()
ctx.arc(70, 100, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#A major圓3
ctx.beginPath()
ctx.arc(90, 100, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#A major數1
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 46.5, 104.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#A major數2
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 66.5, 102.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#A major數3
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 86.5, 104.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
# o
oo(30,40,ctx)
oo(110,40,ctx)
# x
xx(7,37,ctx)


#C major
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "20px Arial"
ctx.fillText("C major", 130, 30)
#C major圓1
ctx.beginPath()
ctx.arc(210, 71, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#C major圓2
ctx.beginPath()
ctx.arc(170, 100, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#C major圓3
ctx.beginPath()
ctx.arc(150, 130, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#C major數1
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 206.5, 75.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#C major數2
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 166.5, 104.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#C major數3
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 146.5, 134.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
# o
oo(190,40,ctx)
oo(230,40,ctx)
# x
xx(127,37,ctx)


#G major
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "20px Arial"
ctx.fillText("G major", 250, 30)
#G major圓1
ctx.beginPath()
ctx.arc(270, 100, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#G major圓2
ctx.beginPath()
ctx.arc(250, 130, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#G major圓3
ctx.beginPath()
ctx.arc(330, 130, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#G major圓4
ctx.beginPath()
ctx.arc(350, 130, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#G major數1
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 266.5, 104.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#G major數2
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 246.5, 134.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#G major數3
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 326.5, 134.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#G major數4
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("4", 346.5, 134.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
# o
oo(290,40,ctx)
oo(310,40,ctx)


#D major
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "20px Arial"
ctx.fillText("D major", 10, 210)
#D major圓1
ctx.beginPath()
ctx.arc(70, 280, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#D major圓2
ctx.beginPath()
ctx.arc(90, 310, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#D major圓3
ctx.beginPath()
ctx.arc(110, 280, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#D major數1
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 66.5, 284.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#D major數2
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 86.5, 314.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#D major數3
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 106.5, 284.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
# o
oo(50,220,ctx)
# x
xx(7,217,ctx)
xx(27,217,ctx)


#E major
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "20px Arial"
ctx.fillText("E major", 130, 210)
#E major圓1
ctx.beginPath()
ctx.arc(190, 250, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#E major圓2
ctx.beginPath()
ctx.arc(150, 280, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#E major圓3
ctx.beginPath()
ctx.arc(170, 280, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#E major數1
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 186.5, 254.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#E major數2
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 146.5, 284.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#E major數3
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 166.5, 284.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
# o
oo(210,220,ctx)
oo(230,220,ctx)
# x
xx(127,217,ctx)


#Cmaj7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "20px Arial"
ctx.fillText("Cmaj7", 250, 210)
#Cmaj7圓1
ctx.beginPath()
ctx.arc(290, 280, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#Cmaj7圓2
ctx.beginPath()
ctx.arc(270, 310, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
#Cmaj7數1
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 286.5, 284.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
#Cmaj7數2
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 266.5, 314.5)
ctx.fill()
ctx.stroke()
ctx.closePath()
# o
oo(310,220,ctx)
oo(330,220,ctx)
oo(350,220,ctx)
# x
xx(247,217,ctx)
&lt;/script&gt;</summary><category term="Brython"></category></entry><entry><title>W11 Brython 繪圖範例</title><link href="./w11-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-11-21T12:00:00+08:00</published><updated>2016-11-21T12:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2016-11-21:./w11-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 100+i*30)
    ctx.lineTo(201, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 100)
    ctx.lineTo(100+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()
ctx.closePath()

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()
    ctx.closePath()

background(300, 300, 10, 10, 5, 4, ctx)
background(100, 300, 10, 10, 5, 4, ctx)
background(300, 100, 10, 10, 5, 12, ctx)
&lt;/script&gt;

&lt;p&gt;上述繪圖第一部分使用迴圈繪製水平線與垂直線:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;!-- 以下實際利用  Brython 畫圖 --&gt;
&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 100+i*30)
    ctx.lineTo(201, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 100)
    ctx.lineTo(100+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()
ctx.closePath()
&lt;/script&gt;
&lt;/pre&gt;

&lt;p&gt;至於將繪圖內容納入 def 函式定義格式後:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;!-- 以下實際利用  Brython 畫圖 --&gt;
&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()
    ctx.closePath()

background(300, 300, 10, 10, 5, 4, ctx)
background(100, 300, 10, 10, 5, 4, ctx)
background(300, 100, 10, 10, 5, 12, ctx)
&lt;/script&gt;
&lt;/pre&gt;</summary><category term="Brython"></category></entry></feed>